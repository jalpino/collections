<b>Collections</b> is a library of iteration methods for Coldfusion arrays and structures. 

<h2>API</h2>
<b>map( data, callback )</b>
Create a new collection by executing the provided callback on each element 
in the provided collection

<i>Callback Method signature</i>


<b>reduce( data, callback [, initialvalue ] )</b>
Executes the provided callback for each element in the collection 
(from left to right) passing in the value from the previous execution, 
the value of the current index, the index itself and the original 
provided collection. Use this method to reduce a collection to a single 
value. Structure collections will be iterated by key name in ascending 
order (i.e. mystruct['apple'], mystruct['banana'], mystruct['cucumber'], ...).

<i>Callback Method signature</i>



<b>reduceRight( data, callback [, initialvalue ] )</b>
Executes the provided callback for each element in the collection 
(from right to left) passing in the value from the previous execution, 
the value of the current index, the index itself and the originaly 
provided collection. Use this method to reduce a collection to a single 
value. Structure collections will be iterated over by key name in 
descending order(i.e. ..., mystruct['cucumber'], mystruct['banana'], mystruct['apple']).
<i>Callback Method signature</i>

	 

<b>forEach( data, callback )</b>
Applies the provided callback on each item in the collection
<i>Callback Method signature</i>


<b>filter( data, callback )</b>
Returns a filtered collection of items that pass the "test" from the 
provided callback.
<i>Callback Method signature</i>


<b>some( data, callback )</b>
Returns true if at least one item in the collection passes the "test" 
from the provided callback.
<i>Callback Method signature</i>


<b>every( data, callback )</b>
Returns true if all of the items in the collection pass the "test" from 
the provided callback. 
<i>Callback Method signature</i>

<h2>Usage</h2>
TODO: Fill this in
